= slide 'Днес' do
  list:
    Как да подхождаме към външни софтуерни зависимости
    Полезни Ruby библиотеки
    Съвети за проектите

= slide 'Предстоящи теми', 'през шестте оставащи сбирки' do
  list:
    Паралелно програмиране на 7-ми януари
    Тестване
    ОО-дизайн
    Q&A сесия за проектите ви
    Бира на 21-ви януари

= slide 'Изпитни дати и втори тест' do
  list:
    Вторият тест ще е по време на сесията
    Неделя, 8 февруари от 10 ч., зала 200 - втори тест и след него, първа дата за защита на проект
    Събота, 14 февруари, от 10 ч., зала 308 - втора и последна възможна дата за защита на проект

= slide 'Проекти' do
  list:
    Отговорили сме на всички, които са писали за избор на тема (ако не сте получили отговор, обадете се)
    [Ръководството за проекти](https://github.com/fmi/ruby-course-guides/blob/master/course_projects.md#readme) се обновява от време на време - следете за промени
    Направете прототип на проекта си, както ръководството съветва

= slide 'Прототипи' do
  list:
    В терминологията на XP (extreme programming) - spikes
    Пишете код, без да мислите за тестове, добър дизайн, архитектура, преизползване
    Гоните минимална цел и имате разумен времеви лимит
    Изследователска цел - опознаване на проблемната област и на избраните технологии
    След постигане на целта, прототипът се изоставя и се започва на чисто
    Освен всичко, носи и допълнителен стимул, когато видите нещо (частично) работещо

= slide 'Полезни Ruby gem-ове и поуки' do
  list:
    Ще разгледаме някои популярни и полезни Ruby библиотеки
    По пътя ще се опитаме да научим нещо ново
    Например, добри практики при структуриране на проект
    "Boilerplate" неща, необходими на един Ruby gem или проект
    Други интересни Ruby трикове от практиката
    Но преди това...

= slide 'Third-party software – disclaimer' do
  p Долното е извадка от <a href="http://www.gnu.org/licenses/gpl.html">GNU GPL лиценза за отворен код</a>:

  blockquote
    p 15. Disclaimer of Warranty.
    p THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

    p 16. Limitation of Liability.
    p IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

= slide 'Third-party software – disclaimer' do
  p Долното е извадка от <a href="http://www.gnu.org/licenses/gpl.html">GNU GPL лиценза за отворен код</a>:

  blockquote
    p 15. Disclaimer of Warranty.
    p THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM <span style="outline: 4px solid red;">“AS IS” WITHOUT WARRANTY OF ANY KIND</span>, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

    p 16. Limitation of Liability.
    p IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

= slide '“AS IS” WITHOUT WARRANTY OF ANY KIND' do
  p.action Ние, програмистите, не вярваме на собствения си код, та какво остава за чуждия такъв?
  p.action Така и трябва. Колкото по-малко зависимости от чужд (third-party) код – толкова по-добре.
  p.action Изобщо, колкото по-малко код, откъдето и да е дошъл – толкова по-добре. Но това е друга тема.
  p.action От друга страна, не може да си напишем всичко. Трябва да стъпим на нещо. И трябва да знаем как да изберем на какво.

= slide 'Популярни gem-ове', 'статистика от rubygems.org' do
  p
    a href="https://rubygems.org/stats" rubygems.org/stats

  p.action Като изключим "помощни" gem-ове, най-популярният е Rails (с над 42 милиона изтегляния)

= slide 'Откриване на нови Ruby Gems' do
  list:
    Статистики за популярни/най-използвани gem-ове (търсете в Google)
    [The Ruby Toolbox](https://www.ruby-toolbox.com/)
    Помощ от приятел

= slide 'Оценка качеството на съществуващи gem-ове' do
  list:
    Знаете името на gem и се чудите какво прави и дали е качествен?
    `rubygems.org/gems/именабиблиотеката` → линк "Source code" или "Homepage"
    Или търсите направо в GitHub
    Гледате колко хора са добавили и fork-нали проекта, откога е последния commit, дали има много issues и pull requests и прочее
    Разглеждате кода

= slide 'Инсталация под Windows' do
  list:
    Някои gem-ове използват C-разширения
    `gem install gemname --platform=ruby`
    RubyInstaller и Ruby DevKit – [http://rubyinstaller.org/](http://rubyinstaller.org/)

= slide 'RubyDoc' do
  list:
    [rubydoc.info](http://www.rubydoc.info/) - място за преглеждане на RDoc
    Генерирана документация от който и да е публикуван gem
    Ако не можете да откриете документацията на даден gem, проверете там

= slide 'Rails' do
  p
    a href="http://rubyonrails.org" rubyonrails.org

  list:
    Безспорно най-популярното нещо в Ruby света
    Добра отправна точка и [overview на Rails може да намерите в миналогодишните слайдове](http://2012.fmi.ruby.bg/lectures/15-ruby-on-rails-part-1#1)
    Тази година няма да говорим за него, но ще разгледаме някои негови компоненти

= slide 'RuboCop' do
  p
    a href="https://github.com/bbatsov/rubocop" https://github.com/bbatsov/rubocop

= slide 'Sidekiq' do
  p
    a href="https://github.com/mperham/sidekiq" https://github.com/mperham/sidekiq

= slide 'ActiveSupport' do
  p
    a href="https://github.com/rails/rails/tree/master/activesupport" https://github.com/rails/rails/tree/master/activesupport

  list:
    [Ръководство](http://guides.rubyonrails.org/active_support_core_extensions.html) - силно препоръчително

= slide 'ActiveRecord' do
  p
    a href="https://github.com/rails/rails/tree/master/activerecord" https://github.com/rails/rails/tree/master/activerecord

  list:
    ORM
    Може да работи с редица релационни бази данни - PostgreSQL, SQLite, MySQL и други
    Обикновено имате нужда и от съответния DB driver (пак gem) - например `mysql2`, `pg`, `sqlite3` и т.н.
    [Ръководство](http://guides.rubyonrails.org/active_record_basics.html) - силно препоръчително
    Може да се ползва извън Rails

= slide 'ActiveRecord-Sinatra' do
  p
    a href="https://github.com/janko-m/sinatra-activerecord" https://github.com/janko-m/sinatra-activerecord

= slide 'Curses', 'command-line UIs' do
  p
    a href="https://github.com/ruby/curses" https://github.com/ruby/curses

  list:
    Било е част от стандартната библиотека, вече е отделен gem
    [Документация](http://www.rubydoc.info/gems/curses)

= slide 'Thor' do
  p
    a href="https://github.com/erikhuda/thor" https://github.com/erikhuda/thor

= slide 'CarrierWave и Paperclip' do
  p
    a href="https://github.com/carrierwaveuploader/carrierwave" https://github.com/carrierwaveuploader/carrierwave
  p
    a href="https://github.com/thoughtbot/paperclip" https://github.com/thoughtbot/paperclip

= slide 'Kaminari и will_paginate' do
  p
    a href="https://github.com/amatsuda/kaminari" https://github.com/amatsuda/kaminari
  p
    a href="https://github.com/mislav/will_paginate" https://github.com/mislav/will_paginate

= slide 'MiniMagick' do
  p
    a href="https://github.com/minimagick/minimagick" https://github.com/minimagick/minimagick

= slide 'CanCan' do
  p
    a href="https://github.com/ryanb/cancan" https://github.com/ryanb/cancan

= slide 'Devise' do
  p
    a href="https://github.com/plataformatec/devise" https://github.com/plataformatec/devise

= slide 'Bcrypt-Ruby' do
  p
    a href="https://github.com/codahale/bcrypt-ruby" https://github.com/codahale/bcrypt-ruby

= slide 'ActiveAdmin' do
  p
    a href="https://github.com/gregbell/active_admin" https://github.com/gregbell/active_admin

= slide 'Nokogiri' do
  p
    a href="https://github.com/sparklemotion/nokogiri" https://github.com/sparklemotion/nokogiri

= slide 'SASS' do
  p
    a href="https://github.com/nex3/sass" https://github.com/nex3/sass

= slide 'SimpleForm и Formtastic' do
  p
    a href="https://github.com/plataformatec/simple_form" https://github.com/plataformatec/simple_form
  p
    a href="https://github.com/justinfrench/formtastic" https://github.com/justinfrench/formtastic

= slide 'Capistrano' do
  p
    a href="https://github.com/capistrano/capistrano" https://github.com/capistrano/capistrano
  p.action Deploy WordPress with Capistrano!

= slide 'Passenger, Unicorn, Thin, Puma' do
  p
    a href="https://github.com/phusion/passenger" https://github.com/phusion/passenger

= slide 'Fog' do
  p
    a href="https://github.com/fog/fog" https://github.com/fog/fog

= slide 'Bundler' do
  p
    a href="https://github.com/bundler/bundler" https://github.com/bundler/bundler
    '  или
    a href="http://bundler.io/" http://bundler.io

  p.action Практически задължително за всеки проект, който има нужда от други gem-ове.
  list:
    Грижи се за две неща - инсталация на правилната версия на всички зависимости
    Зареждане на правилната версия на всички зависимости

= slide 'Обобщение' do
  list:
    По света има много gem-ове, за почти всичко
    Трябва да може да откривате такива и да оценявате качеството им
    Не трябва да им се предоверявате
    Разровете се в кода и структурата на тези gem-ове
    Ще научите много от кода и практиката на другите

= slide 'String#%', 'бонус слайдове' do
  list:
    Методът `%` на `String` е много удобен за интерполация и форматиране на определени низове
    Тази функционалност е позната още като "sprintf"
    Подробна документация за нея може да се намери в [`Kernel.sprintf`](http://ruby-doc.org/core-2.1.0/Kernel.html#method-i-sprintf)
    Два основни режима на работа – с позиционни и с именувани placeholder-и
    `%` може да се ползва и без точка, като други методи, наподобяващи оператори

= slide 'String#%', 'пример с позиционни аргументи' do
  p Когато имаме повече от една стойност за интерполация, трябва да подадем списък:

  annotate:
    '%02d' % 7                             # =>
    '%02d:%02d:%02d' % [19, 5, 2]          # =>

    name = 'Пешо'
    'Здравей, <strong>%s</strong>!' % name # =>

= slide 'String#%', 'пример с именувани аргументи' do
  annotate:
    template = '
      <html>
      <head>
        <title>%{title}</title>
      </head>
      <body>
        %{content}
      </body>
      </html>
    '

    variables = {
      title:   'String Interpolation',
      content: 'Made easy by Kernel.sprintf.',
      foobar:  'Extra keys are not an issue.'
    }

    template % variables # =>
