= slide 'Административни неща', '...където припомняме за какво идеше реч' do
  ul
    li.action Ruby курс, в който влизаме дълбоко в заешката дупка
    li.action Аз съм Митьо и зад мен има армия от помощници (ще ни видите на сайта)
    li.action Понеделник (325) и Сряда (200) от 19:00
    li.action
      ' Сайтът ни е <a href="http://fmi.ruby.bg/">fmi.ruby.bg</a> &mdash; регистрирайте се
        скоропостижно, ако все още не сте.
    li.action
      ' Имаме <a href="http://facebook.com/groups/programming.ruby/">Facebook група</a> и
        <a href="http://twitter.com/rbfmi">Twitter потребител</a>, ако си падате по тези неща

= slide 'Административни неща (2)' do
  list:
    Курсът е труден, тежък, страшен...
    Ако идвате само за кредити и/или оценка, по-добре отпишете
    Основно лекции (и някои други неща), нямаме упражнения
    Присъствието е силно препоръчително (така ще ви е доста по-лесно)
    Всичко се върти около сайта на курса и присъствие на лекциите, направете си сметка
    Разбира се, да не забравяме кръвта и потта от ваша страна

= slide 'Добри новини (за изостаналите)', 'или как да изкарате първите си 3 точки' do
  list:
    Сложете си снимка на сайта
    Качете си Ruby 2.1 и качете screenshot на форумите
    НОВО! НОВО! НОВО! Представете се на форумите

= slide 'По-добри новини', 'първа задача' do
  list:
    Ще ви я дадем още тази седмица (сряда)
    Ще имате една седмица
    Ще включва материал от днес и от сряда
    Припомняме, че ако не предадете повече от 3 задачи, ще се видим септември

= slide 'Класация' do
  p.action
    img src="01/leaderboard.png"

= slide 'Цели', 'За какво ще говорим днес?' do
  list:
    Какво е Ruby програма и как се изпълнява?
    Как да се справим с документацията в Ruby
    Основните типове в Ruby
    Променливи и константи
    Условни конструкции — `if`
    Дефиниране и извикване на прости функции

= slide 'Ruby програми' do
  list:
    Програмите в Ruby са текстови файлове
    Няма компилация като в C или Java
    Изпълняват се с `ruby име_на_файл`

= slide 'Ruby програми', 'Любимият на всички пример' do
  example:
    puts "Hello world"
    puts "The answer of life is ", 6 * 7

  p Изпълнява се с <code>ruby hello.rb</code>

= slide 'irb', 'интерактивна конзола' do
  list:
    `irb` – Interactive Ruby
    REPL — Read-Eval-Print Loop
    Тук ще прекарваме доста време - и ние, и вие
    Стартирате я с `irb` (трябва да ви е в "пътя")

= slide 'irb', 'интерактивна конзола' do
  pre
    ' $ irb
      >> 6 * 9
      54
      >> "Ruby! " * 4
      "Ruby! Ruby! Ruby! Ruby!"
      >> -10.abs
      10

= slide 'irb', 'особености' do
  list:
    `Ctrl + C` и `Ctrl + D`
    Windows - Copy/paste
    Синтактични грешки
    Алтернативни терминали/конзоли (вж. форумите)
    Мини демо тайм

= slide 'Документация', 'или как да разберем какво прави нещо в Ruby?' do
  ul
    li <code>ri</code> е инструмент, с който може да разглеждате документацията на клас или метод
    li
       code ri String
       '  показва документацията на класа <code>String</code>
    li
      code ri Numeric#abs
      '  показва документацията на метода <code>abs</code> на класа на числата
    li
      code ri -i
      '  пуска документацията в интерактивен режим. Пробвайте го.
    li
      ' Документацията е достъпна онлайн на
      a href="http://ruby-doc.org/" http://ruby-doc.org/
    li
      a href="http://apidock.com" APIDock
      '  е ваш добър приятел

= slide 'Съставните части на една Ruby програма', 'ръководство по ориентиране' do
  list:
    Синтаксис (вкл. и ключови думи)
    Ключови думи `if`, `def`, `class`, `defined?` и още дузина-две
    Ядро (core) – [http://ruby-doc.org/core/](http://ruby-doc.org/core/)
    Стандартна библиотека (stdlib) – [http://ruby-doc.org/stdlib/](http://ruby-doc.org/stdlib/)

= slide 'Инсталация', 'или как да се снабдим?' do
  ul
    li
      a href="http://ruby-lang.org/en/downloads" http://ruby-lang.org/
    li Windows &mdash; има RubyInstaller
    li
      ' Linux, Mac &mdash; пробвайте
      a href="https://github.com/sstephenson/rbenv#readme" rbenv
      '  или
      a href="http://rvm.beginrescueend.com/" RVM

= slide 'Редактори', 'вечният... дебат' do
  ul
    li.action Забравете за IDE-тата, това не е Java, C# и прочее
    li.action Ползвайте любимия си текстов редактор
    li.action Ако нямате такъв, може да пробвате <a href="http://redcareditor.com/">redcar</a> ако много ви мързи
    li.action Научете Vim или Emacs. После ще благодарите на Стефан.
    li.action Аз бих ви посъветвал да пробвате и <a href="http://www.sublimetext.com/">Sublime Text</a>

= slide 'Стил' do
  ul
    li.action В момента говорим за "форматиране на кода", а не за дизайн
    li.action Ако не можете да си подреждате кода, ориентирайте се към друга професия. Например строителство.
    li.action Изискваме от вас стил като описания тук: <a href="https://github.com/fmi/ruby-style-guide#readme">Ruby Style Guide</a>
    li.action Горното е базирано на <a href="https://github.com/bbatsov/ruby-style-guide">Ruby Style Guide</a> на г-н Бацов и е малко остаряло
    li.action Това не е просто мързел. В реалния свят такива неща се предават фолклорно.
    li.action Ваша задача ще е да обновите ръководството по стил по-горе (разбира се, че ще ви платим)

= slide 'Извеждане на екрана', 'или как да досаждате на хората с текст' do
  ul
    li.action Става с <code>puts</code>
    li.action Например <code>puts "Chunky bacon!"</code>
    li.action <code>puts</code> не е ключова дума, а "глобална" функция
    li.action Може да се извика и със скоби: <code>puts("Chunky bacon!")</code>
    li.action Последното важи за всички функции в Ruby

= slide 'Имена и неща', 'или още, Урсула ле Гуин в контекста на Ruby' do
  p Нещата се наименуват с <code>=</code>

  example:
    answer = 42
    almost_pi = 3.14
    food = 'Chunky bacon'
    greeting = "What's up?"

= slide 'Имена и неща', '...или разликата между нещо и неговите имена' do
  p
    ' <code>=</code> не копира стойността, а насочва променливата към обекта отдясно

  pre
    ' >> word = "oat"
      >> breakfast = word
      >> dinner = word
      >> word.insert(0, 'g')
      >> puts breakfast
      goat

= slide 'Действия', 'още известни като "методи"' do
  pre
    ' >> "shut up".upcase()
      →  "SHUT UP"
      >> "wonderful".sub("wonder", "color")
      →  "colorful"
      >> 3.14.floor
      →  3
      >> 24.gcd 56
      →  8
      >> 'wonderful'.sub 'wonde', 'colo'
      →  "colorful"

= slide 'Видове променливи' do
  example:
    favourite = 'Chunky bacon' # локална
    Tax = '20%'                # константа
    $important = 'Money'       # глобална

  p Има още: <code>@name</code> и <code>@@name</code>

= slide 'Ключови думи', 'Вече заети' do
  pre
    ' alias    and      BEGIN    begin      break
      case     class    def      defined?   do
      else     elsif    END      end        ensure
      false    for      if       in         module
      next     nil      not      or         redo
      rescue   retry    return   self       super
      then     true     undef    unless     until
      when     while    yield

= slide 'Основни типове', '1/2' do
  ul
    li.action Цели числа &mdash; <code>42</code>, <code>-271</code>, <code>1_024</code>
    li.action Низове &mdash; <code>"chunky"</code>, <code>'bacon'</code>
    li.action С плаваща запетая &mdash; <code>3.1415</code>
    li.action Булеви &mdash; <code>true</code> и <code>false</code>
    li.action Нищо &mdash; <code>nil</code>
    li.action Масиви &mdash; <code>[2, 3, 5, 7, 11]</code>


= slide 'Основни типове', '2/2' do
  ul
    li.action Хешове &mdash; <code>{'one' => 1, 'two' => 2}</code>
    li.action Регулярни изрази &mdash; <code>/(bb)|([^b]{2})/</code>
    li.action Области &mdash; <code>2..6</code>, <code>'a'...'z'</code>
    li.action Символи &mdash; <code>:name</code>, <code>:send</code>
    li.action Анонимни функции &mdash; <code>lambda { |x| x ** 2 }</code>, <code>-> x { x ** 2 }</code>
    li.action Обекти &mdash; <code>Person.new</code>

= slide 'Цели числа' do
  example:
    0
    1729
    -271
    1_000_000
    0377        # осмични
    0b0100_0010 # двоични
    0xDEADBEEF  # шестнадесетични

= slide 'Числа с плаваща запетая' do
  example:
    0.0
    3.14
    -273.15
    1.22e28
    1_000.001

= slide 'Текст' do
  example:
    'Chunky bacon, I say!'
    "Who is John Galt?"
    "We're the knights who say \"Ni!\""
    '\'0 freddled gruntbugly\' he begun'
    'This text contains\nno newlines'
    "This text contains\none newline"

= slide 'Операции с текст' do
  pre
    ' >> "Hello, " + " " + "chunky!"
      →  "Hello,  chunky!"
      >> "Ha! " * 3
      →  "Ha! Ha! Ha! "
      >> "%s bacon" % 'Chunky'
      →  "Chunky bacon"
      >> text = 'Chanky'
      >> text[2] = 'u'
      >> text << ' bacon'
      >> puts text
      Chunky bacon

= slide 'Още операции с текст' do
  annotate:
    "bacon\n".chop            #=>
    "bacon".chop              #=>
    "bacon\n".chomp           #=>
    "bacon".chomp             #=>
    "Goodbye".include? 'oo'   #=>
    "Danube".length           #=>
    "oat".insert 0, 'bl'      #=>
    "bloat".sub "bl", "m"     #=>
    "bacon".upcase            #=>
    "BaCoN".downcase          #=>

= slide 'Символи', '...което ще ви обърка' do
  ul
    li.action Малко особен тип в Ruby
    li.action <code>:something</code>, <code>:other</code> и <code>:larodi</code>
    li.action Сходен на низ &mdash; immutable и интерниран
    li.action Различни приложения
    li.action Не го мислете много

= slide 'Интерполация' do
  p Работи при двойни кавички, не работи при единични

  example:
    character = 'Arthur'
    answer = 42
    puts "#{character} had it: #{answer}"

= slide 'Оператори', '...или как да оперирате с Ruby' do
  pre
    ' **  ~   /   %    +    -    &
      <<  >>  |   ^    >    <    >=   <=   <=>
      &&  ||  !   and  or   not  ||=  &&=
      =   +=  -=  *=   /=   %=   **=  >>=  <<=
      ^=  &=  |=  ..   ...  defined?

= slide 'Истина и лъжа', '...където става философско' do
  ul
    li.action <code>nil</code> се оценява като "лъжа"
    li.action <code>false</code> се оценява като "лъжа" (очевидно)
    li.action всичко друго е истина
    li.action <code>0</code>, <code>""</code> и <code>[]</code> са истина
